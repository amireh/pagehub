<% content_for :scripts do %>
<script src="/js/codemirror-2.3/lib/codemirror.js"></script>
<script src="/js/codemirror-2.3/mode/xml/xml.js"></script>
<script src="/js/codemirror-2.3/mode/markdown/markdown.js"></script>
<script src="/js/codemirror-2.3/mode/gfm/gfm.js"></script>

<script src="/js/codemirror-2.3/mode/javascript/javascript.js"></script>
<script src="/js/codemirror-2.3/mode/ruby/ruby.js"></script>
<script src="/js/codemirror-2.3/mode/shell/shell.js"></script>
<script src="/js/codemirror-2.3/mode/lua/lua.js"></script>
<script src="/js/codemirror-2.3/mode/clike/clike.js"></script>

<script src="/js/codemirror-2.3/keymap/mxvt.js"></script>

<link rel="stylesheet" href="/js/codemirror-2.3/lib/codemirror.css">
<link rel="stylesheet" href="/js/codemirror-2.3/theme/<%= @theme %>.css">
<link rel="stylesheet" href="/css/codemirror.css">

<!-- apply user preferences -->
<style>
  .CodeMirror {
    font-family: <%= Preferences::FontMap[preferences["editing"]["font_face"]] %>;
    font-size: <%= preferences["editing"]["font_size"].to_i %>px;
    line-height: <%= preferences["editing"]["line_height"].to_i %>px;
  }
</style>

<script type="text/javascript">

  $(function() {
    var editor = null;

    /* ---- -------- *
     * Page Handling *
     * ---- -------- */
    // Loading a page
    function get_page() {
      if ($(this).hasClass("selected")) {
        ui.show_title_editor();
        return false;
      }

      $("#page_actions").removeClass("disabled");

      $("#page_listing .selected").removeClass("selected");
      $(this).addClass("selected");

      // ui.status("Loading page...", "pending");
      ui.mark_pending();

      editor.save();

      var title = $(this).attr("id").replace("page_", "");
      $.ajax({
        type: "GET",
        url: "/pages/" + title + ".json",
        success: function(page) {
          var page = JSON.parse(page);
          var content = page.content;
          var groups = page.groups;
          editor.clearHistory();
          editor.setValue(content);
          $("#preview").attr("href", "/pages/" + title + "/pretty");
          $("#share_everybody").attr("href", 
            "/pages/" + title + "/share");

          // Disable the group share links for all the groups this page
          // is already shared with
          $("a[data-action=share][data-group]").each(function() {
            var group = $(this).attr("data-group");
            var already_shared = false;
            for (var i = 0; i < groups.length; ++i) {
              if (groups[i] == group) {
                $(this).attr("data-disabled", true);
                already_shared = true;
                break;
              }
            }

            if (!already_shared) {
              $(this).attr("href", "/pages/" + title + "/share/" + group);
              $(this).attr("data-disabled", null);
            } else {
              $(this).attr("href", null);
              $(this).attr("data-disabled", true);
            }
          });

          editor.focus();
        },
        complete: function() {
          ui.mark_ready();          
        }
      });

      return false;
    }
    $("#page_listing li").click(get_page);
    // Creating a new page
    $("#new_page").click(function() {
      console.log("creating a page")
      ui.status("Creating a new page...", "pending");

      $.ajax({
        url: "/pages",
        type: "POST",
        success: function(page_id) {
          console.log("page created successfully")
          var new_page = "<li id=\"page_" + page_id + "\">page #" + page_id + "</li>";
          $("#page_listing").prepend(new_page);
          $("#page_listing li.selected").removeClass("selected");
          $("#page_listing li:first").click(get_page);
          ui.editor.setValue("Write your text here.");
          $("#page_listing li:first").click();
        },
        error: function(e) {
          console.log("smth bad happened")
          console.log(e)
        }
      });
    });

    /* --- ------ *
     * The Editor *
     * --- ------ */
    ui.editor = editor = ui.create_editor("page_editor");
    ui.actions = $("#page_actions");

    // Resize it to fill up the remainder of the screen's height
    var editor_h = $(window).height() - 123;
    $(".CodeMirror-scroll").css("min-height", editor_h + "px");
    editor.refresh();

    /* ------ -------- *
     * Action bindings *
     * ------ -------- */
    ui.on_action("save_content", function() {
      ui.save();
    });
    ui.on_action("change_font", function() {
      var font = $("#page_actions select :selected").attr("value");
      console.log("Font: " + font);
      $(".CodeMirror").css("font-family", font);
    });
    $("#increase_height").click(function() {
      var step = parseInt($(".CodeMirror").css("line-height"));
      $(".CodeMirror-scroll").css("min-height", 
        (parseInt($(".CodeMirror-scroll").css("min-height")) + step) +"px");
      editor.refresh();
    });
    $("#decrease_height").click(function() {
      var step = parseInt($(".CodeMirror").css("line-height"));
      $(".CodeMirror-scroll").css("min-height", 
        (parseInt($(".CodeMirror-scroll").css("min-height")) - step) +"px");
      editor.refresh();
    });
    ui.on_action("refresh_editor", function() {
      editor.refresh();
    });
    $("#page_actions a").click(function() {
      return ui.action($(this).attr("id"));
    });

    /* ----------- *
     * Keybindings *
     * ----------- */
    shortcut.add("ctrl+alt+s", function() { ui.save(); })
    shortcut.add("ctrl+alt+v", function() { ui.preview(); })
    shortcut.add("ctrl+alt+d", function() { ui.destroy(); })
    shortcut.add("ctrl+alt+c", function() { $("#new_page").click(); })
    shortcut.add("ctrl+alt+e", function() { ui.editor.focus(); })
    shortcut.add("ctrl+alt+r", function() { editor.refresh(); })
    shortcut.add("ctrl+alt+a", function() { 
      if ($("#page_listing li.selected").length == 1)
        $("#page_listing li.selected").focus();
      else
        $("#page_listing li:first").focus();
    })

    /* -------- ---------- *
     * Document Navigation *
     * -------- ---------- */
    // var disable_scrolling = function(e){
    //   switch(e.keyCode){
    //     case 37: case 39: case 38:  case 40: // Arrow keys
    //     case 32: e.preventDefault(); break; // Space
    //     default: break; // do not block other keys
    //   }
    // }
    // $("#page_listing li").focusin(function() {
    //   window.addEventListener("keyup", disable_scrolling, false);
    //   $(this).bind('keydown', function(e) {
    //     if (e.keyCode == 38)
    //       $(this).prev("li").focus();
    //     else if (e.keyCode == 40)
    //       $(this).next("li").focus();
    //     else if (e.keyCode == 13)
    //       $(this).click();
    //     else
    //       return true;

    //     e.preventDefault();
    //     return false;
    //   });
    // }).focusout(function() {
    //   $(this).unbind('keydown');
    //   window.removeEventListener("keyup", disable_scrolling, false);
    // });



    $("#pages .scroller").css("max-height", $(window).height() - 123);  

  }); 
</script>
<% end %>

<% content_for :title do %>
  PageHub
<% end %>

<% content_for :wraps do %>
  <div class="action_bar_wrap"></div>
<% end %>

<div id="pages">
  <a tabindex="1" href="#" id="new_page" title="Create a new page (Ctrl+Alt+C)">New</a>
  <!-- the scroller is used to enforce a max-height and inject scrollbars when needed -->
  <div class="scroller">

    <!-- the wrappers are used to pivot the absolute <h3> -->
      <!-- <h3 class="your_pages">Your Pages &rarr;</h3> -->
      <input type="text" id="title_editor" hidden="hidden" />
      <ul id="page_listing">
        <% 1.times do %>
        <% logged_in? && @pages.each_with_index do |p, pidx| %>
          <li tabindex="<%= pidx + 2 %>" id="page_<%= p.id %>">
            <a href="/pages/<%= p.id %>"><%= p.title == "Untitled" ? "page ##{p.id}" : p.title %></a>
            </li>
        <% end %>
        <% end %>
      </ul>

    <!-- <hr /> -->
      <!-- <h3 class="useful_links">Useful Links &darr;<small>open in new tab</small></h3> -->

    </div>
</div><div id="editor_container"><!--

--><div class="disabled" id="page_actions">
  <a href="#" title="Saves the content of this page (Ctrl+Alt+S)" id="save_content">Save</a>
  <a target="PageHub - Preview" 
     title="View the current page in prettified HTML mode in a new tab (Ctrl+Alt+V)" 
     href="/pages/x/pretty" id="preview">Pretty Version</a>
  <a id="destroy_page" class="confirm"
     data-confirmation="Are you sure you want this page to be FOREVER deleted?"
     data-confirmation-cb="destroy_page"
     title="Deletes the page forever (Ctrl+Alt+D)">Delete</a>
  <a class="listlike" id="page_share_links">Share</a>
  <ol class="listlike" id="page_share">
    <li><a  target="PageHub" 
            title="Make a public version of this page that you can share with people" 
            href="/pages/x/share"
            id="share_everybody">With Everybody
        </a>
    </li>
    <% current_user.groups.each do |g| %>
    <li>
      <a  target="PageHub"
          href="/pages/x/share/<%= g.name %>"
          data-action="share"
          data-group="<%= g.name %>">With <%= g.title %></a>
    </li>
    <% end %>
  </ol>
  <a class="listlike" id="editor_actions_links">Editor Actions</a>
  <ol class="listlike" id="editor_actions">
    <li><a href="#" title="Increase the height of the editor" id="increase_height">Grow</a></li>
    <li><a href="#" title="Decrease the height of the editor" id="decrease_height">Shrink</a></li>
    <li><a href="#" title="Refresh the editor if it's stuck or acting funny (Ctrl+Alt+R)" id="refresh_editor">Refresh</a></li>
  </ol>
</div><textarea id="page_editor"><%= File.read(File.join(settings.views, "tutorial.md")) %></textarea>
</div>
<img class="loader" src="/css/ajax-loader.gif" />

<%= erb :"/shared/_confirmation_dlg" %>