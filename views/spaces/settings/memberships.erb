<% content_for(:title) { "Membership Settings | #{@space.title} | PageHub" } %>
<% content_for(:section) { %> memberships <% } %>

<%= partial "spaces/settings/_nav" %>

<% content_for :jasdfs do %>
<script>
  $(function() {

    var lookup_timer = null;
    var lookup_pulse = <%= preferences["spaces"]["lookup_pulse"] %>;
    var gid = <%= @space.id %>;

    $("form").submit(function() {
      $(this).find("[data-dyn-entity]:hidden").remove();

      return true;
    });

    // List of registered users (their nicknames)
    var users = [];
    var admins = <%= @space.admins.collect { |a| a.nickname }.to_json %>;

    // Appends a <li> containing the nickname and a remove button
    // to the registered user listing - #users
    var add_user = function(nn) {
      dynamism.inject({ users: [ { nickname: nn, role: "member" } ]}, $("table"))
    }

    // Clicking on a received nickname will add it
    // to the registered members listing - #users
    var bind_user_listing = function(list) {
      list.find("li").click(function() {
        var nn = $(this).html();

        // don't add a user twice
        log(users + " => " + nn )
        for (var i = 0; i < users.length; ++i) {
          if (users[i] == nn)
            return false;
        }

        list.empty();
        add_user(nn);
      });
    }

    // Populates the #user_listing with all the nicknames
    // starting with $("#user_search").attr("value")
    lookup_user = function(nn) {
      var list = $("#user_listing");

      $.ajax({
        url: "/users/nickname",
        method: "GET",
        data: { nickname: nn },
        success: function(users) {
          var users = JSON.parse(users);
          console.log(users)

          list.empty();

          if (users.length > 0) {
            for (var i = 0; i < users.length; ++i) {
              list.append("<li>" + users[i] + "</li>");
            }
          }

          bind_user_listing(list);
        }
      })
    }

    // Queues a lookup after lookup_pulse milliseconds
    $("#user_search").keyup(function() {
      var nn = $(this).attr("value");

      if (lookup_timer) {
        clearTimeout(lookup_timer);
        lookup_timer = null;
      }

      lookup_timer = setTimeout("lookup_user('" + nn + "')", lookup_pulse);
    });

    // check the member's role radio button
    assign_role = function(el, user) {
      el.find(":checked").attr("checked", null);
      el.find("input[type=radio][value=" + user.role + "]").attr("checked", "checked");
    }

    var kicked = {};
    var kick_member = function(id, nn) {
      pagehub.spaces.kick(id, gid, {
        success: function() {
          ui.status.show(nn + " is no longer a member of this space.", "good");
          kicked[id] = true;

          // re-initiate the UI removal event
          $("#user_" + id).find("[data-dyn-action=remove]").click();
        },
        error: function(e) {
          ui.status.show("Unable to kick the member " + nn + ": " + e.responseText, "bad");
        }
      });
    } // kick_member

    var on_kick_member = function(el) {
      var nn = el.find("input:hidden").attr("value"),
          id = el.attr("id").replace("user_", "");
      console.log(kicked);
      if (!kicked[id]) {

        // confirm kicking
        pagehub.confirm("Are you sure you want to kick the member " + nn + "?", "Member Removal",
          function() {
            kick_member(id, nn);
          });

        throw "Halt";
      } // removal confirmed?
    };

    dynamism.on_removal(on_kick_member);

    dynamism.inject(<%= @space.all_users.to_json %>, $("table"))
  });
</script>
<% end %>

<% content_for :deferred_js do %>
  <script>
    pagehub_hooks.push(
      require([ 'models/space', 'views/spaces/settings/memberships' ], function(Space, SettingsView) {
        var space = new Space(<%= rabl :"/spaces/show", object: @space %>.space);
        s = new SettingsView({ space: space });
      })
    );
  </script>
<% end %>

<form id="space_membership_settings">
  <h2>Add Members</h2>
  <label>You can look up users by their nicknames using the text box below.
    <br /><br />
    <input type="text" id="user_search" autocomplete="off" class="very_fat search-box" />
  </label>
  <div class="user-listing" id="user_listing"></div>
  <h2>Registered Members</h2>

  <table>
    <thead>
      <tr>
        <th>Nickname</th>
        <th>Contributions</th>
        <th>Role<br /><small>(Member/Editor/Admin)</small></th>
        <th>Actions</th>
      </tr>
    </thead>
    <tbody id="membership_records">
    </tbody>
  </table>
</form>


<div class="space_role_description">
  <h3>Group Roles</h3>
  <h4>Members</h4>
  <p>Members are limited to reading the pages
    written by the space editors.</p>
  <h4>Editors</h4>
    <p>Editors can
    write new pages and folders, edit existing ones, and rename them.</p>
  <h4>Admins</h4>
  <p>Administrators can invite new members,
    promote and demote them to and from
    the editorial role, and can kick non-admins.
    Admins get all the perks editors and members do.
  </p>
  <h4>Group creator</h4>
  <p>The space creator can change the space name, promote
    and demote others to/from the admin role, and kick admins.</p>
</div>